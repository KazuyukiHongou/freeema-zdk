/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts'

import type { BaseErc20 } from './BaseErc20'

export class BaseErc20Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<BaseErc20> {
    return super.deploy(name, symbol, decimals, overrides || {}) as Promise<BaseErc20>
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, decimals, overrides || {})
  }
  attach(address: string): BaseErc20 {
    return super.attach(address) as BaseErc20
  }
  connect(signer: Signer): BaseErc20Factory {
    return super.connect(signer) as BaseErc20Factory
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BaseErc20 {
    return new Contract(address, _abi, signerOrProvider) as BaseErc20
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint8',
        name: 'decimals',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'who',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162000faf38038062000faf833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260200151915060009050620001b96001600160e01b036200025516565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508251620002189060019060208601906200025a565b5081516200022e9060029060208501906200025a565b506004805460ff191660ff929092169182179055600a0a6103e80260055550620002fc9050565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029d57805160ff1916838001178555620002cd565b82800160010185558215620002cd579182015b82811115620002cd578251825591602001919060010190620002b0565b50620002db929150620002df565b5090565b6200025791905b80821115620002db5760008155600101620002e6565b610ca3806200030c6000396000f3fe6080604052600436106100c25760003560e01c806370a082311161007f57806395d89b411161005957806395d89b4114610322578063a9059cbb14610337578063dd62ed3e14610370578063f2fde38b146103ab576100c2565b806370a08231146102a9578063715018a6146102dc5780638da5cb5b146102f1576100c2565b806306fdde0314610104578063095ea7b31461018e57806318160ddd146101db57806323b872dd14610202578063313ce5671461024557806340c10f1914610270575b6100ce336005546103de565b34156101025760405133903480156108fc02916000818181858888f19350505050158015610100573d6000803e3d6000fd5b505b005b34801561011057600080fd5b506101196104d6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015357818101518382015260200161013b565b50505050905090810190601f1680156101805780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561019a57600080fd5b506101c7600480360360408110156101b157600080fd5b506001600160a01b03813516906020013561056b565b604080519115158252519081900360200190f35b3480156101e757600080fd5b506101f0610581565b60408051918252519081900360200190f35b34801561020e57600080fd5b506101c76004803603606081101561022557600080fd5b506001600160a01b03813581169160208101359091169060400135610587565b34801561025157600080fd5b5061025a6106e6565b6040805160ff9092168252519081900360200190f35b34801561027c57600080fd5b506101026004803603604081101561029357600080fd5b506001600160a01b0381351690602001356106ef565b3480156102b557600080fd5b506101f0600480360360208110156102cc57600080fd5b50356001600160a01b0316610767565b3480156102e857600080fd5b50610102610782565b3480156102fd57600080fd5b50610306610836565b604080516001600160a01b039092168252519081900360200190f35b34801561032e57600080fd5b50610119610845565b34801561034357600080fd5b506101c76004803603604081101561035a57600080fd5b506001600160a01b0381351690602001356108a3565b34801561037c57600080fd5b506101f06004803603604081101561039357600080fd5b506001600160a01b0381358116916020013516610970565b3480156103b757600080fd5b50610102600480360360208110156103ce57600080fd5b50356001600160a01b031661099b565b6001600160a01b038216610439576040805162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f20616464726573730000000000604482015290519081900360640190fd5b6001600160a01b038216600090815260066020526040902054610462908263ffffffff610aa516565b6001600160a01b03831660009081526006602052604090205560035461048e908263ffffffff610aa516565b6003556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b5050505050905090565b6000610578338484610aff565b90505b92915050565b60035490565b6001600160a01b03831660009081526006602052604081205482118015906105d257506001600160a01b03841660009081526007602090815260408083203384529091529020548211155b156106db576001600160a01b038316600090815260066020526040902054610600908363ffffffff610aa516565b6001600160a01b038085166000908152600660205260408082209390935590861681522054610635908363ffffffff610b6a16565b6001600160a01b0385166000908152600660209081526040808320939093556007815282822033835290522054610672908363ffffffff610b6a16565b6001600160a01b03808616600081815260076020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060016106df565b5060005b9392505050565b60045460ff1690565b6106f7610bac565b6000546001600160a01b03908116911614610759576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61076382826103de565b5050565b6001600160a01b031660009081526006602052604090205490565b61078a610bac565b6000546001600160a01b039081169116146107ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156105615780601f1061053657610100808354040283529160200191610561565b33600090815260066020526040812054821161096857336000908152600660205260409020546108d9908363ffffffff610b6a16565b33600090815260066020526040808220929092556001600160a01b0385168152205461090b908363ffffffff610aa516565b6001600160a01b0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600161057b565b50600061057b565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6109a3610bac565b6000546001600160a01b03908116911614610a05576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610a4a5760405162461bcd60e51b8152600401808060200182810382526026815260200180610c486026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610578576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260076020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600061057883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610bb0565b3390565b60008184841115610c3f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c04578181015183820152602001610bec565b50505050905090810190601f168015610c315780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122090a8748dad231a330d2ffd7a48e84313c315233b90cde98891cb6f678aa30b0764736f6c63430006080033'
